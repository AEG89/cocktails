{"version":3,"sources":["context.js","componants/SearchForm.js","componants/Loading.js","componants/Cocktail.js","componants/CocktailList.js","pages/Home.js","pages/About.js","pages/SingleCocktail.js","pages/Error.js","logo.svg","componants/Navbar.js","App.js","reportWebVitals.js","index.js"],"names":["AppContext","React","createContext","AppProvider","children","useState","loading","setLoading","searchTerm","setSearchTerm","cocktails","setcocktails","fetchDrinks","useCallback","a","fetch","response","json","data","drinks","newCocktails","map","item","id","idDrink","name","strDrink","image","strDrinkThumb","info","strAlcoholic","glass","strGlass","useEffect","Provider","value","useGlobalContext","useContext","SearchForm","searchValue","useRef","current","focus","className","onSubmit","e","preventDefault","htmlFor","type","ref","onChange","Loading","Cocktail","src","alt","to","CocktailList","length","Home","About","url","SingleCocktail","useParams","cocktail","setCocktail","category","strCategory","instructions","strInstructions","strIngredient1","strIngredient2","strIngredient3","strIngredient4","strIngredient5","ingredients","console","log","getCocktail","index","Error","logo","App","Navbar","exact","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7b86b511.chunk.js","sourcesContent":["import React, { useState, useContext, useEffect} from 'react';\r\nimport { useCallback } from 'react';\r\nconst url = 'https://www.thecocktaildb.com/api/json/v1/1/search.php?s='\r\n\r\n\r\nconst AppContext = React.createContext();\r\n\r\nconst AppProvider = ({children}) => {\r\n    const[loading, setLoading] = useState(false);\r\n    const [searchTerm,setSearchTerm] = useState('a');\r\n    const [cocktails,setcocktails] = useState([]);\r\n\r\n    const fetchDrinks = useCallback( async () => {\r\n        setLoading(true)\r\n        try {\r\n            const response = await fetch((url)+(searchTerm))\r\n            const data = await response.json()\r\n            const{drinks} = data\r\n            if(drinks){\r\n                const newCocktails = drinks.map((item) => {\r\n                    const{\r\n                        idDrink, \r\n                        strDrink,\r\n                        strDrinkThumb,\r\n                        strAlcoholic,\r\n                        strGlass,\r\n                    }\r\n                    =item;\r\n                    return{\r\n                        id:idDrink,\r\n                        name:strDrink,\r\n                        image:strDrinkThumb,\r\n                        info:strAlcoholic,\r\n                        glass:strGlass,\r\n                    }\r\n                })\r\n\r\n                setcocktails(newCocktails)\r\n\r\n            } else{\r\n                setcocktails([])\r\n            }\r\n            setLoading(false)\r\n\r\n        } catch(error){\r\n            setLoading(false)\r\n        }\r\n    },[searchTerm])\r\n\r\n    useEffect(() => {\r\n        fetchDrinks()\r\n    }, [searchTerm, fetchDrinks])\r\n     \r\n    return <AppContext.Provider value={{\r\n        loading,\r\n        searchTerm, \r\n        cocktails, \r\n        setSearchTerm,\r\n    }} >{children}</AppContext.Provider>    \r\n}\r\n\r\nexport const useGlobalContext = () => {\r\n    return useContext(AppContext)\r\n\r\n}\r\n\r\nexport {AppContext}\r\nexport { AppProvider}\r\n\r\n\r\n","import React from \"react\";\r\nimport { useGlobalContext } from \"../context\";\r\n\r\nconst SearchForm = () => {\r\n    const {setSearchTerm} = useGlobalContext();\r\n    const searchValue = React.useRef('')\r\n\r\n    React.useEffect(() => {\r\n        searchValue.current.focus()\r\n    }, [])\r\n\r\n    const searchCocktail = () => {\r\n        setSearchTerm(searchValue.current.value)\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n    }\r\n    return(\r\n        <section className='section search'>\r\n            <form className='search-form' onSubmit={handleSubmit}>\r\n                <div className='form-control'>\r\n                    <label htmlFor='name'>Search Your Favourite Cocktail\r\n                    </label>\r\n                    <input type='text' \r\n                    id='name' \r\n                    ref={searchValue}\r\n                    onChange={searchCocktail}\r\n                     />\r\n                </div>\r\n            </form>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default SearchForm;","import React from 'react'\r\n\r\nconst Loading = () => {\r\n return (\r\n  <div className=\"loader\">\r\n  </div>\r\n )\r\n}\r\n\r\nexport default Loading","import React from \"react\";\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst Cocktail = ({image,name,id,info,glass}) => {\r\n    \r\n    return (\r\n        <article className='Cocktail'>\r\n            <div className='img-container'>\r\n                <img src={image} alt={name} />\r\n            </div>\r\n            <div className='cocktail-footer'>\r\n                <h3>{name}</h3>\r\n                <h4>{glass}</h4>\r\n                <p>{info}</p>\r\n                <Link to={'/cocktail/'+(id)} className='btn btn-primary btn-details'>\r\n                    Details\r\n                </Link>\r\n            </div>\r\n        </article>\r\n    )\r\n}\r\n\r\nexport default Cocktail;","import React from \"react\";\r\nimport Loading from './Loading';\r\nimport Cocktail from './Cocktail';\r\nimport { useGlobalContext } from \"../context\";\r\n\r\nconst CocktailList = () => {\r\n    const {cocktails, loading} = useGlobalContext();\r\n    \r\n\r\n    if(loading){\r\n        return <Loading />\r\n    }\r\n    if(cocktails.length < 1) {\r\n        return (\r\n            <h2 className='section-title'>\r\n                No cocktails matched your search criteria\r\n            </h2>\r\n        )\r\n    }\r\n    return(\r\n        <section className='section'>\r\n            <h2 className='section-title'>\r\n                cocktails\r\n            </h2>\r\n            <div className='cocktails-center'>\r\n                {cocktails.map((item) => {\r\n                    return<Cocktail key={item.id} {...item} />\r\n                })}\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default CocktailList;","import React from 'react'\r\nimport SearchForm from '../componants/SearchForm'\r\nimport CocktailList from '../componants/CocktailList'\r\n\r\nconst Home = () => {\r\n  return (\r\n    <main>\r\n      <SearchForm />\r\n      <CocktailList />\r\n    </main>\r\n  )\r\n}\r\n\r\nexport default Home","import React from 'react'\r\n\r\n\r\nconst About = () => {\r\n  return (\r\n    <section className='section about-section'>\r\n      <h1 className='section-title'>About Us</h1>\r\n      <p>\r\n      Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\r\n      </p>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default About","import React from 'react'\r\nimport {Link} from 'react-router-dom';\r\nimport { useParams } from 'react-router'\r\nimport Loading from '../componants/Loading'\r\nconst url = 'https://www.thecocktaildb.com/api/json/v1/1/lookup.php?i='\r\n\r\n\r\nconst SingleCocktail = () => {\r\n  const{id} = useParams()\r\n    \r\n  const[loading,setLoading] = React.useState(false);\r\n  const [cocktail, setCocktail] = React.useState(null);\r\n  React.useEffect(() => {\r\n    setLoading(true);\r\n    async function getCocktail(){\r\n      try{\r\n        const response = await fetch((url)+(id))\r\n        const data = await response.json()\r\n        \r\n        if(data.drinks){\r\n          const {strDrink:name, \r\n            strDrinkThumb:image, \r\n            strAlcoholic:info,\r\n            strCategory:category,\r\n            strGlass:glass, \r\n            strInstructions:instructions,\r\n            strIngredient1,\r\n            strIngredient2,\r\n            strIngredient3,\r\n            strIngredient4,\r\n            strIngredient5,\r\n          } = data.drinks[0]\r\n          const ingredients=[\r\n            strIngredient1,\r\n            strIngredient2,\r\n            strIngredient3,\r\n            strIngredient4,\r\n            strIngredient5,\r\n          ]\r\n          const newCocktail = {\r\n            name,image,info,category,glass,instructions,ingredients\r\n          }\r\n          setCocktail(newCocktail)\r\n        }else {\r\n          setCocktail(null)\r\n        }\r\n        setLoading(false)\r\n      }catch(error){\r\n        console.log(error)\r\n        setLoading(false)\r\n      }\r\n    }\r\n    getCocktail()\r\n  },[id])\r\n  if(loading){\r\n    return < Loading/>\r\n  }\r\n  if (!cocktail){\r\n    return <h2 className='section-title'>No cocktail to display</h2>\r\n  }\r\n  const{name,image,category,info,glass,instructions,ingredients} = cocktail\r\n  return (\r\n    <section className='section cocktail-section'>\r\n       <Link to='/' className='btn btn-primary'>\r\n        Back to home\r\n      </Link> \r\n      <h2 className='section-title'>{name}</h2>\r\n      <div className='drink'>\r\n        <img src={image} alt={name} />\r\n          <div className='drink-info'>\r\n            <p>\r\n              <span className='drink-data'>name :</span>{name}\r\n            </p>\r\n            <p>\r\n              <span className='drink-data'>category :</span>{category}\r\n            </p>\r\n            <p>\r\n              <span className='drink-data'>info :</span>{info}\r\n            </p>\r\n            <p>\r\n              <span className='drink-data'>glass :</span>{glass}\r\n            </p>\r\n            <p>\r\n              <span className='drink-data'>instructions :</span>{instructions}\r\n            </p>\r\n            <p>\r\n              <span className='drink-data'>ingredients :</span>\r\n              {ingredients.map((item,index) => {\r\n                return item? <span key={index}>{item}</span>:null\r\n              })}\r\n            </p>\r\n          </div>\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default SingleCocktail","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nconst Error = () => {\r\n  return (\r\n    <section className='error-page section'>\r\n      <div className='Error-container'>\r\n        <h1>oops! It's a dead end</h1>\r\n      \r\n      \r\n        <Link className='btn btn-primary'  to='/'>Back to home</Link>\r\n        </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default Error;","export default __webpack_public_path__ + \"static/media/logo.5bb3b58e.svg\";","import React from 'react';\r\nimport logo from '../logo.svg';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nconst Home = () => {\r\n  return (\r\n   <nav className='navbar'>\r\n     <div className=\"nav-center\">\r\n       <Link to='/'>\r\n         <img src={logo} alt='' className=\"logo\"/></Link>\r\n     </div>\r\n     <ul className='nav-links'>\r\n       <li><Link to='/'>Home</Link></li>\r\n       <li><Link to='/About'>About</Link></li>\r\n     </ul>\r\n   </nav>\r\n  )\r\n}\r\n\r\nexport default Home","import React from 'react'\nimport './App.css';\nimport { BrowserRouter as Router, Route, Routes} from \"react-router-dom\";\n\n//import pages\nimport Home from './pages/Home';\nimport About from './pages/About';\nimport SingleCocktail from './pages/SingleCocktail';\nimport Error from './pages/Error';\n\n//import componants\nimport Navbar from './componants/Navbar';\n\nfunction App() {\n  return (\n    <Router>\n      <Navbar />\n        <Routes>\n         <Route exact path='/' element={<Home/>} />\n         <Route path='/about' element={<About/>} />\n         <Route path='/cocktail/:id' element={<SingleCocktail/>} />\n         <Route path='/*' element={<Error/>} />\n        </Routes>\n    </Router>\n\n        )\n        \n        }\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {AppProvider} from './context';\n\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <AppProvider><App /></AppProvider>\n    \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}